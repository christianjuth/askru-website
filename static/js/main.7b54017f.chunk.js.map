{"version":3,"sources":["serviceWorker.js","index.js","redux/actions.js","redux/reducer.js","App.js","components/Navbar.js","pages/Login.js","pages/Home.js","pages/Question.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","SEARCH_SET","SEARCH_RESULTS","AUTHENTICATE","timeout","search","query","dispatch","type","payload","clearTimeout","setTimeout","a","global","axios","get","params","questions","data","authenticate","userName","password","headers","Cookies","token","post","auth","set","reducer","state","action","searchResults","userId","initialState","theme","createMuiTheme","palette","primary","main","store","createStore","applyMiddleware","thunk","create","baseURL","Authentication","connect","props","className","container","direction","justify","alignItems","item","xs","md","path","component","QuestionScreen","HomeScreen","useStyles","makeStyles","toolbar","grow","flexGrow","title","fontWeight","menuButton","marginRight","spacing","position","borderRadius","shape","backgroundColor","fade","common","black","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","justifyContent","inputRoot","color","inputInput","padding","withRouter","classes","elevation","disableGutters","to","variant","noWrap","placeholder","value","onChange","e","history","pathname","push","target","root","input","inputProps","textAlign","fullWidth","card","cardContent","flexDirection","useState","setUserName","setPassword","login","useEffect","onClick","button","map","r","_id","gutterBottom","body","question","setQuestion","id","result","advice","size","fontSize"],"mappings":"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","file":"static/js/main.7b54017f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Cookies from 'js-cookie';\nimport axios from 'axios';\n\nexport const SEARCH_SET = 'SEARCH_SET';\nexport const SEARCH_RESULTS = 'SEARCH_RESULTS';\nexport const AUTHENTICATE = 'AUTHENTICATE';\n\n\n\nlet timeout = null;\nexport function search({ query }) {\n  return function(dispatch) {\n\n    dispatch({\n      type: SEARCH_SET,\n      payload: query\n    });\n\n    clearTimeout(timeout);\n    setTimeout(async () => {\n      let questions = await global.axios.get('/questions/search', {\n        params: {\n          query: query\n        }\n      });\n\n      dispatch({\n        type: SEARCH_RESULTS,\n        payload: questions.data.questions\n      });\n    }, 400);\n  };\n}\n\n\n\nexport function authenticate({ userName, password }) {\n  return async function(dispatch) {\n\n    let token;\n    let headers = {};\n    if(!password) {\n      token = await Cookies.get('token');\n      headers['x-auth-token'] = token;\n    }\n\n    let auth = await axios.post('https://api.askru.tech/api/users/authenticate', {\n      userName,\n      password\n    }, {headers});\n\n    if(!token) {\n      Cookies.set('token', auth.data.token);\n    }\n\n    dispatch({\n      type: AUTHENTICATE,\n      payload: auth.data\n    });\n  };\n}\n","\nimport {\n  SEARCH_SET,\n  SEARCH_RESULTS,\n  AUTHENTICATE\n} from './actions';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case SEARCH_SET:\n      return {\n        ...state,\n        search: action.payload\n      };\n    case SEARCH_RESULTS:\n      return {\n        ...state,\n        searchResults: action.payload\n      };\n    case AUTHENTICATE:\n      return {\n        ...state,\n        userId: action.payload.userId\n      };\n    default:\n      return state;\n  }\n}\n\nexport const initialState = {\n  search: '',\n  searchResults: [],\n  userId: null\n};\n","import React from 'react';\nimport './App.css';\nimport {Grid} from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer, { initialState } from './redux/reducer';\nimport { Provider, connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navbar from './components/Navbar';\nimport LoginScreen from './pages/Login';\nimport HomeScreen from './pages/Home';\nimport QuestionScreen from './pages/Question';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#a71136'\n    }\n  },\n});\n\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nglobal.axios = axios.create({\n  baseURL: 'https://api.askru.tech/api/'\n});\n\nfunction Auth(props) {\n\n  if(!props.userId) return <LoginScreen/>;\n\n  return (\n    <div className=\"Content\">\n      <Router>\n        <Navbar/>\n\n        <Grid container=\"container\" direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item=\"item\" xs={12} md={8}>\n            <Switch>\n              <Route path=\"/question/:id\" component={QuestionScreen} />\n              <Route path=\"/\" component={HomeScreen} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return ({\n    userId: state.userId,\n  });\n};\n\nlet Authentication = connect(mapStateToProps)(Auth);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Authentication/>\n        </div>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, InputBase, Grid } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { search } from '../redux/actions';\nimport {withRouter} from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    // borderBottomWidth: 1,\n    // borderBottomStyle: 'solid',\n    // borderColor: '#ccc'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  title: {\n    fontWeight: 400\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.05),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.08)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7)\n  }\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n\n  function onSearch(e) {\n    if(props.history.location.pathname !== '/')\n      props.history.push('/');\n    props.dispatch(search({\n      query: e.target.value\n    }));\n  }\n\n  return (<div className={classes.grow}>\n    <AppBar position=\"fixed\" elevation={0} className={classes.toolbar}>\n      <Grid container=\"container\" direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item=\"item\" xs={12} md={8}>\n          <Toolbar disableGutters={true}>\n            <Link to='/' className='fake-link'>\n              <Typography variant=\"h6\" className={classes.title} noWrap=\"noWrap\">\n                Ask<b>RU</b>\n              </Typography>\n            </Link>\n            <div className={classes.grow}/>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon/>\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                value={props.search}\n                onChange={onSearch}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }} inputProps={{\n                  'aria-label' : 'search'\n                }}/>\n            </div>\n          </Toolbar>\n        </Grid>\n      </Grid>\n    </AppBar>\n  </div>);\n}\n\nconst mapStateToProps = state => {\n  return ({\n    search: state.search,\n  });\n};\n\n\nexport default connect(mapStateToProps)(withRouter(Navbar));\n","import React, {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Card, CardContent, Typography, Input,Button} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { authenticate } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    height: '100vh',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n\n  title: {\n    fontWeight: 400,\n    textAlign: 'center'\n  },\n\n  fullWidth: {\n    width: '100%'\n  },\n\n  card: {\n    height: 300,\n    width: 400,\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: 200,\n    width: '100%',\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  function login() {\n    props.dispatch(authenticate({\n      userName,\n      password\n    }));\n  }\n\n  useEffect(() => {\n    login();\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <Card elevation={0} className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h4\" className={classes.title} noWrap=\"noWrap\">\n            Ask<b>RU</b>\n          </Typography>\n          <Input\n            className={classes.fullWidth}\n            placeholder='username'\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n          <Input\n            className={classes.fullWidth}\n            placeholder='password'\n            type='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button variant=\"contained\" color='primary' onClick={login} className={classes.button}>\n            Default\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return ({\n    searchResults: state.searchResults,\n  });\n};\n\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Fragment } from 'react';\nimport {Card, CardContent, Typography} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\n\nfunction Home(props) {\n  return (<Fragment>\n    {props.searchResults.map((r) => (\n      <Link className='fake-link' to={`/question/${r._id}`}>\n        <Card elevation={0}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom=\"gutterBottom\">\n              {r.title}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {r.body}\n            </Typography>\n          </CardContent>\n        </Card>\n        <br/>\n      </Link>\n    ))}\n  </Fragment>);\n}\n\nconst mapStateToProps = state => {\n  return ({\n    searchResults: state.searchResults,\n  });\n};\n\n\nexport default connect(mapStateToProps)(Home);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport {Card, CardContent, Typography, IconButton} from '@material-ui/core';\nimport {ArrowUpward, ArrowDownward} from '@material-ui/icons';\nimport { connect } from 'react-redux';\n\nfunction Home(props) {\n\n  const [question, setQuestion] = useState();\n\n  useEffect(() => {\n    global.axios.get('/questions/oneById', {\n      params: {\n        _id: props.match.params.id\n      }\n    })\n    .then((result) => {\n      setQuestion(result.data.question);\n    })\n  }, [props.match.params.id]);\n\n  if(!question) return <div></div>;\n\n  return (\n    <Fragment>\n      <Card elevation={0}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom=\"gutterBottom\">\n            {question.title}\n          </Typography>\n          <Typography color=\"textSecondary\">\n            {question.body}\n          </Typography>\n        </CardContent>\n      </Card>\n      {question.advice.map(a => (\n        <Fragment>\n          <br/>\n          <Card elevation={0}>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom=\"gutterBottom\">\n                {question.body}\n              </Typography>\n              <IconButton size=\"small\">\n                <ArrowUpward fontSize=\"inherit\" />\n              </IconButton>\n              <IconButton size=\"small\">\n                <ArrowDownward fontSize=\"inherit\" />\n              </IconButton>\n            </CardContent>\n          </Card>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = state => {\n  return ({\n    searchResults: state.searchResults,\n  });\n};\n\n\nexport default connect(mapStateToProps)(Home);\n"],"sourceRoot":""}